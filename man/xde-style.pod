=head1 NAME

xde-style - query or set styles for lightweight window managers

=head1 SYNOPSIS

B<> B<xde-style> [{B<-c>|B<--current>}] [I<options>]
 B<xde-style> {B<-l>|B<--list>} [I<options>] [I<STYLE>]
 B<xde-style> {B<-s>|B<--set>}  [I<options>]  I<STYLE>
 B<xde-style> {B<-m>|B<--menu>} [I<options>]
 B<xde-style> [I<options>] {B<-h>|B<--help>}
 B<xde-style> {B<-V>|B<--version>}
 B<xde-style> {B<-C>|B<--copying>}

=head1 DESCRIPTION

B<xde-style> is a C-language application that can be used to query or
set the style of a running or off-line (supported) lightweight window
manager.

See L</USAGE> and L</BEHAVIOR> for more detailed information.

=head1 ARGUMENTS

=over

=item I<STYLE>

The style name or absolute or relative path to the style file.
Specifies the style to list or set.

=back

=head1 OPTIONS

B<xde-style> uses GNU C<get_options_long_only()> to parse options, so
long options with a single dash are accepted; however, short options
cannot be concatenated.  B<xde-style> accepts the following options:

=head2 COMMAND OPTIONS

B<xde-style> accepts the command options as follows:

=over

=item B<-c>, B<--current>

List the current style.  This is also the default when no command option
is specified.

=item B<-l>, B<--list> [I<OPTIONS>] [I<STYLE>]

List available styles or the specified I<STYLE>.  General (non-command)
options can precede a specified I<STYLE>.

=item B<-s>, B<--set> [I<OPTIONS>] I<STYLE>

Set the style specified by I<STYLE>.  General (non-command) options can
precede the specified I<STYLE>.

=item B<-m>, B<--menu> [I<OPTIONS>] [I<STYLE>]

List available styles or the specified I<STYLE>.  General (non-command)
options can precede a specified I<STYLE>.  This differs from B<--list>
in that the output is in the format of a sub-menu for the specified or
detected window manager.

=item B<-h>, B<--help>, B<-?>, B<--?>

Prints usage information to standard output and exits.  This command
option can be preceded by other options to observe the settings that
result in the help output.

=item B<-V>, B<--version>

Prints version information to standard output and exits.

=item B<-C>, B<--copying>

Prints copying permission to standard output and exits.

=back

=head2 GENERAL OPTIONS

B<xde-style> accepts the following non-command options:

=over

=item B<-e>, B<--shell>

Output information in a format suitable to be sourced or evaluated by a
shell script.  The default is to provide output in a human-readable
format.

=item B<-p>, B<--perl>

Output information in a format suitable to be evaluated by a perl
script (L<Data::Dumper(3pm)> terse format).   The default is to provide
output in a human-readable format.

=item B<-y>, B<--system>

When listing or setting styles, only list or set system styles.  The
default is to list or set both system and user styles.

Note: Not all window managers can distinguish between system and user
styles.  Case in point is L<icewm(1)>, which, when setting a style, will
use the first style encountered.  When a style name is both a user and
system style, the user style takes precedence.  This option has no
effect on L<icewm(1)>.

=item B<-u>, B<--user>

When listing or setting styles, only list or set user styles.  The
default is to list or set both system and user styles.

See note above under, B<--system>.

=item B<-S>, B<--screen> I<SCREEN>

Only act on the screen number, I<SCREEN>.  The default, C<-1>, is to act
on all screens unless the screen number is specified int he C<DISPLAY>
environment variable, in which case the screen number defaults to the
specified screen.  In general, a window manager with good multiple head
support will add the screen number to the C<DISPLAY> environment
variable for programs that it launches and the screen number does not
need to be specified.

=item B<-L>, B<--link>

When setting the style, symbolic link the style files where possible.
When not specified a symbolic link will be used whenever one already
exists.

Some window managers have two options for specifying style files.  One
is to place the name of the file into a style file that then includes
the ultimate style file; another is to symbolic link the style file to
the ultimate style file.  The symbolic link can cause problems when the
window manager looks for auxiliary files (such as pixmaps) in the same
directory as the style file.

=item B<-t>, B<--theme>

When listing styles, only list styles that correspond to XDE themes.
When settings styles, set the XDE theme when the style name corresponds
to an XDE theme, regardless of whether the name corresponds to a window
manager style.  When getting the current style, get the current XDE
theme name instead.

=item B<-w>, B<--wmname> I<WMNAME>

Do not detect the window manager, but assume that the window manager
named, I<WMNAME> is to be used.  The B<--screen> option and C<DISPLAY>
environment variable are ignored.

=item B<-f>, B<--rcfile> I<RCFILE>

When the B<--wmname> option has been specified, use the file, I<RCFILE>,
as the configuration file for the window manager.

=item B<-r>, B<--reload>

When setting the style, ask the window manager to reload the new style.
This may involve sending a signal or X client message to the window
manager.  Reload can only be performed when the window manager has been
detected (i.e. B<--wmname> was not specified).

=item B<-D>, B<--debug> [I<LEVEL>]

Increment or set the debug level to I<LEVEL>.  The default debug level
is 0.

=item B<-v>, B<--verbose> [I<LEVEL>]

Increment or set output verbosity level to I<LEVEL>.  The default output
verbosity level is 1.  This option may be repeated.

=back

=head1 USAGE

The typical use of B<xde-style> is for use by root menus to set the
style on the window manager.  It can be executed when the menu selection
is made and results in the proper setting of the window manager and
corresponding desktop style.

=head1 OUTPUT FORMAT

Diagnostic messages are always sent to standard error.  Requested output
is sent to standard output.  B<xde-style> generates the following
output:

=over

=item 1.

When a request to list the current style has been made using the
B<--current> option, two fields are printed on a single line separated
by a single space: the style name and the style file specification.

Example:

 $> xde-style -w echinus
 Default /home/brian/.echinus/styles/Default/stylerc

=item 2.

When a request to list a specified style has been made using the
B<--list> option with a specified I<STYLE>, two or three fields are
printed on one or two lines separated by a single space: the style name
and the style file specification.  When one of the styles listed is the
current style, an additional field containing an asterisk is output for
that line.
Styles are listed user styles before system styles, however,
styles in each group are in no specific order:
pass them through L<sort(1)> if you want them sorted.

Example:

 $> xde-style -w waimea -l Squared-blue
 Squared-blue /home/brian/.waimea/styles/Squared-blue/stylerc *
 Squared-blue /usr/share/waimea/styles/Squared-blue/stylerc

=item 3.

When a request to list all styles is made using the B<--list> option
alone, all styles are listed as two or three fields per line, each field
separated by a single space.  The current style will have an asterisk in
the third field.
Styles are listed user styles before system styles, however,
styles in each group are in no specific order:
pass them through L<sort(1)> if you want them sorted.

Example:

 $> xde-style -w waimea -l
 Squared-blue /home/brian/.waimea/styles/Squared-blue/stylerc *
 Squared-green /home/brian/.waimea/styles/Squared-green/stylerc
 Squared-blue /usr/share/waimea/styles/Squared-blue/stylerc
 Squared-green /usr/share/waimea/styles/Squared-green/stylerc

=item 4.

When a request to list styles restricted to system or user styles using
the B<--list> option in conjunction with the B<--system> or B<--user>
option is made, all styles of the corresponding type are listed as two
or three fields per line, each field separated by a single space.  The
current style, if listed, will have an asterisk in the third field.
Styles are listed in no specific order:
pass them through L<sort(1)> if you want them sorted.

Example:

 $> xde-style -w waimea -l -y
 Squared-blue /usr/share/waimea/styles/Squared-blue/stylerc
 Squared-green /usr/share/waimea/styles/Squared-green/stylerc

 $> xde-style -w waimea -l -u
 Squared-blue /home/brian/.waimea/styles/Squared-blue/stylerc *
 Squared-green /home/brian/.waimea/styles/Squared-green/stylerc

=back

=head1 BEHAVIOUR

=head1 THEME SUPPORT

=head1 WINDOW MANAGERS

B<xde-style> supports various window managers through the use of
plug-ins.  Plug-ins are provided for the following lightweight window
managers (in alphabetical order):

=over

=item L<2bwm(1)>

L<2bwm(1)> does not provide for styles at all.  All style parameters are
compiled into the program.

=item L<adwm(1)>

B<TODO:> L<adwm(1)> does provides its own style system.  B<xde-style>
provides a style setting mechanism for L<adwm(1)> that can be used from
scripts.  B<xde-style> can also provide a style sub-menu for L<adwm(1)>.

=item L<aewm(1)>

B<TODO:> L<aewm(1)> does not support a style system.  It does provide
the command line option for a configuration file; however, changing this
file requires restarting L<aewm(1)> from a session manager such as
B<xde-session(1)>.

=item L<afterstep(1)>

L<afterstep(1)> provides its own style system.  B<xde-styles> provides a
style-setting mechanism for L<afterstep(1)> that can be used from
scripts outside of the L<afterstep(1)> root menu.

=item L<awesome(1)>

L<awesome(1)> provides a style system.  B<xde-styles> provides a
style-setting mechanism for L<awesome(1)> that can be used from scripts
outside of the L<awesome(1)> root menu system.

=item L<blackbox(1)>

L<blackbox(1)> provides its own style system.  B<xde-styles> provides a
style-setting mechanism for L<blackbox(1)> that can be used from scripts
outside of the L<blackbox> root menu system.  B<xde-style> can also
provide a style sub-menu for L<blackbox(1)>.

=item L<bspwm(1)>

B<TODO:> L<bspwm(1)> does not support a style system.  It does support
dynamic reconfiguration of all features of the window manager using the
L<bspc(1)> control program.  Styles can be in the form of shell scripts
that execute to set the appropriate features of the window manager.

=item L<ctwm(1)>

L<ctwm(1)> does not provide a style system.  B<xde-styles> provides a
style system the same as for L<twm(1)>.

=item L<cwm(1)>

L<cwm(1)> does not provide a style system.  B<xde-styles> provides a
style system by directly editing the L<cwmrc(5)> configuration file.
This is not done yet, but it will probably be an L<m4(1)> configuration
system similar to that provided for L<twm(1)>.  It will also include
some shell scripts and L<m4(1)> configuration files that can be used
from within a menu (such as L<xdg-traymenu(1)>).

L<cwm(1)> only provides meager root menu.  XDE, therefore, pops a tray
menu in response to button presses on the root window.

=item L<dtwm(1)>

TODO.

=item L<dwm(1)>

TODO.

=item L<echinus(1)>

L<echinus(1)> does not provide a style system.  B<xde-styles> provides a
style system based on the C<#include> directive observed by X Resource
Manager files.

=item L<etwm(1)>

L<etwm(1)> does not provide a style system.  B<xde-styles> provides a
style system the same as for L<twm(1)>.

=item L<failsafewm(1)>

TODO.

=item L<fluxbox(1)>

L<fluxbox(1)> provides its own style system.  B<xde-style> provides a
style-setting mechanism for L<fluxbox(1)> that can be used from scripts
outside of the L<fluxbox(1)> root menu system.  B<xde-style> can also
provide a style sub-menu for L<fluxbox(1)>.

=item L<flwm(1)>

TODO.

=item L<fvwm(1)>

L<fvwm(1)> has an add-on style system called L<fvwm-themes(1)> which is,
however, pretty clunky.  B<xde-styles> provides a style system using the
powerful configuration file system of L<fvwm(1)> and provides a
style-setting mechanism that can be used from outside of the L<fvwm(1)>
root menu.  The F<xde-styles> package also provides some configuration
scripts that can be used from within the L<fvwm(1)> root menu.

=item L<herbstluftwm(1)>

TODO.

=item L<i3(1)>

TODO.

=item L<icewm(1)>

L<icewm(1)> provides its own style system.  B<xde-styles> provides a
style-setting mechanism for L<icewm(1)> that can be used from scripts
outside of the L<icewm(1)> root menu.  Style sub-menus for L<icewm(1)>
are not normally specified externally; however, B<xde-styles> can also
provide a style sub-menu for L<icewm(1)>; however, it simply cannot
override the L<icewm(1)> style menus.

=item L<jwm(1)>

L<jwm(1)> does not provide a style system. B<xde-styles> provides a
style system using the C<E<lt>IncludeE<gt>> mechanism of the L<jwm(1)>
configuration file and provides a style-setting mechanism that can be
used from outside of the L<jwm(1)> root menu.  The F<xde-styles> package
also provides some shell scripts that can be used from within the
L<jwm(1)> root menu.  B<xde-style> can also generate a style sub-menu
for L<jwm(1)> using this mechanism.

=item L<matwm2(1)>

L<matwm2(1)> does not provide a style system.  B<xde-styles> provides a
style system by directly editing the F<.matwmrc> configuration file.
This is not done yet, but it will probably be an L<m4(1)> configuration
system similar to that provided for L<twm(1)>.  It will also include
some shell scripts and L<m4(1)> configuration files that can be used
from within a menu (such as L<xdg-traymenu(1)>).

L<matwm2(1)> does not provide a root menu.  XDE, therefore, pops a tray
menu in response to button presses on the root window.

=item L<metacity(1)>

L<metacity(1)> provides its own style system based on GTK themes.
B<xde-styles> provides a style-setting mechanism for L<metacity(1)> that
can be used without the need for an entire GNOME desktop.

=item L<mwm(1)>

TODO.

=item L<openbox(1)>

L<openbox(1)> provides its own style system.  B<xde-styles> provides a
style-setting mechanism for L<openbox(1)> that can be used from scripts
outside of the L<openbox> root menu without need for L<obconf(1)>.
B<xde-style> can also provide a style sub-menu for L<openbox(1)>.

=item L<pekwm(1)>

L<pekwm(1)> provides its own style system using scripts; however, these
scripts can only be invoked from within L<pekwm(1)>.  B<xde-styles>
provides a style-setting mechanism for L<pekwm(1)> that can be used from
scripts outside of the L<pekwm(1)> root menu.  B<xde-style> can also
generate a style sub-menu for L<pekwm(1)>.

=item L<spectrwm(1)>

TODO.

=item L<twm(1)>

L<twm(1)> does not provide a style system.  B<xde-styles> provides a
style system using an L<m4(1)> configuration system and provides a
style-setting mechanism that can be used from outside of the L<twm(1)>
root menu.  The F<xde-styles> package also provides some shell scripts
and L<m4(1)> configuration files that can be used from within the
L<twm(1)> root menu.  B<xde-style> can also generate a style sub-menu
that can be used by this mechanism.

=item L<uwm(1)>

L<uwm(1)> (µwm) does not provide a style system.  B<xde-styles> provides
a style system based on the C<include> mechanism of the
L<uwm(1)> configuration file and provides a style-setting mechanism that
can be used from outside of the L<uwm(1)> root menu.  The F<xde-styles>
package also provides some shell scripts that can be used from within
the L<uwm(1)> root menu.

=item L<vtwm(1)>

L<vtwm(1)> does not provide a style system.  B<xde-styles> provides a
style system the same as for L<twm(1)>.

=item L<waimea(1)>

L<waimea(1)> provides its own style system similar to L<fluxbox(1)> and
L<blackbox(1)>.  B<xde-style> provides a style-setting mechanism for
L<waimea(1)> that can be used from scripts outside the L<waimea(1)> root
menu system.

=item L<wind(1)>

TODO.

=item L<wm2(1)>

TODO.

=item L<wmaker(1)>

L<wmaker(1)> provides its own style system, as well as two programs:
L<getstyle(1)> and L<setstyle(1)> that can be used to query and set
styles.  Nevertheless, B<xde-styles> provides a style-setting mechanism
for L<wmaker(1)> that can be used from scripts outside of the
L<wmaker(1)> environment.

=item L<wmii(1)>

TODO.

=item L<wmx(1)>

TODO.

=item L<xdwm(1)>

TODO.

=item L<yeahwm(1)>

TODO.

=back

=head1 HISTORY

Many lightweight window managers provide a style system.  However, few
window managers provide a style setting mechanism that can be used from
outside of their root menu system.  This is primarily why I wrote
B<xde-style>.

=head1 AUTHOR

Brian Bidulock <bidulock@openss7.org>

=head1 SEE ALSO

L<xde-identify(1)>,
L<xde-setwm(1)>,
L<xde-watch(1)>,
L<xde-setbg(1)>.

=cut

# vim: sw=4 tw=72 spell spelllang=en_ca nocin
